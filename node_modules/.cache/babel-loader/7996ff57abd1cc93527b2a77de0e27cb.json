{"ast":null,"code":"import _regeneratorRuntime from \"/Users/adotmob/Desktop/bikerace/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/adotmob/Desktop/bikerace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nvar BACKEND_API_URL = \"http://localhost:3000\";\nexport function fetchRiders() {\n  return _fetchRiders.apply(this, arguments);\n}\n\nfunction _fetchRiders() {\n  _fetchRiders = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var results;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get(\"\".concat(BACKEND_API_URL, \"/riders\"));\n\n          case 3:\n            results = _context.sent;\n            return _context.abrupt(\"return\", results.data);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            new Error(\"backend API request failed.\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return _fetchRiders.apply(this, arguments);\n}\n\n;\nexport function submitSponsorship(_x) {\n  return _submitSponsorship.apply(this, arguments);\n}\n\nfunction _submitSponsorship() {\n  _submitSponsorship = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(form) {\n    var params, results;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            params = {\n              first_name: form.firstName,\n              last_name: form.lastName,\n              email: form.email,\n              slogan: form.slogan\n            };\n            console.log('params', params);\n            _context2.next = 5;\n            return axios.post(\"\".concat(BACKEND_API_URL, \"/submissions\"), params);\n\n          case 5:\n            results = _context2.sent;\n            console.log(results); // return results.data\n\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            new Error(\"backend API request failed.\");\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 9]]);\n  }));\n  return _submitSponsorship.apply(this, arguments);\n}\n\nexport default {\n  fetchRiders: fetchRiders,\n  submitSponsorship: submitSponsorship\n};","map":{"version":3,"sources":["/Users/adotmob/Desktop/bikerace/src/api/backendApi.js"],"names":["axios","BACKEND_API_URL","fetchRiders","get","results","data","Error","submitSponsorship","form","params","first_name","firstName","last_name","lastName","email","slogan","console","log","post"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,eAAe,GAAG,uBAAxB;AAEA,gBAAsBC,WAAtB;AAAA;AAAA;;;;;2BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEmBF,KAAK,CAACG,GAAN,WAAaF,eAAb,aAFnB;;AAAA;AAEGG,YAAAA,OAFH;AAAA,6CAGIA,OAAO,CAACC,IAHZ;;AAAA;AAAA;AAAA;AAOH,gBAAIC,KAAJ,CAAU,6BAAV;;AAPG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AASN;AAED,gBAAsBC,iBAAtB;AAAA;AAAA;;;;;2BAAO,kBAAiCC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEGC,YAAAA,MAFH,GAEY;AACbC,cAAAA,UAAU,EAAEF,IAAI,CAACG,SADJ;AAEbC,cAAAA,SAAS,EAAEJ,IAAI,CAACK,QAFH;AAGbC,cAAAA,KAAK,EAAEN,IAAI,CAACM,KAHC;AAIbC,cAAAA,MAAM,EAAEP,IAAI,CAACO;AAJA,aAFZ;AAUHC,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,MAAtB;AAVG;AAAA,mBAYmBT,KAAK,CAACkB,IAAN,WAAcjB,eAAd,mBAA6CQ,MAA7C,CAZnB;;AAAA;AAYGL,YAAAA,OAZH;AAaHY,YAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ,EAbG,CAcH;;AAdG;AAAA;;AAAA;AAAA;AAAA;AAiBH,gBAAIE,KAAJ,CAAU,6BAAV;;AAjBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAqBP,eAAe;AACbJ,EAAAA,WAAW,EAAXA,WADa;AACAK,EAAAA,iBAAiB,EAAjBA;AADA,CAAf","sourcesContent":["import axios from \"axios\";\n\nconst BACKEND_API_URL = \"http://localhost:3000\";\n\nexport async function fetchRiders() {\n  try {\n    const results = await axios.get(`${BACKEND_API_URL}/riders`)\n    return results.data\n  }\n\n  catch (error) {\n    new Error(\"backend API request failed.\")\n  }\n};\n\nexport async function submitSponsorship(form) {\n  try {\n    const params = {\n      first_name: form.firstName,\n      last_name: form.lastName,\n      email: form.email,\n      slogan: form.slogan\n    }\n\n    \n    console.log('params', params)\n\n    const results = await axios.post(`${BACKEND_API_URL}/submissions`, params);\n    console.log(results)\n    // return results.data\n\n  } catch (error) {\n    new Error(\"backend API request failed.\")\n  }\n}\n\nexport default {\n  fetchRiders, submitSponsorship\n};\n"]},"metadata":{},"sourceType":"module"}