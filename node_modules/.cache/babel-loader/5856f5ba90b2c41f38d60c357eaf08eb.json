{"ast":null,"code":"import _regeneratorRuntime from \"/Users/adotmob/Desktop/bikerace/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/adotmob/Desktop/bikerace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/adotmob/Desktop/bikerace/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/adotmob/Desktop/bikerace/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/adotmob/Desktop/bikerace/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/adotmob/Desktop/bikerace/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/adotmob/Desktop/bikerace/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/adotmob/Desktop/bikerace/src/Location/Location.js\";\nimport React, { Component } from \"react\";\nimport ReactMapboxGl, { Popup, Marker } from \"react-mapbox-gl\";\nimport { fetchRiders } from \"../api/backendApi\";\nimport { Card, Button } from \"react-bootstrap\";\nimport \"./Location.scss\"; // ES5\n\nvar Map = ReactMapboxGl({\n  accessToken: \"pk.eyJ1IjoibGFyb3VxIiwiYSI6ImNqdWkydHVlNDBkajE0Mm43amViYTc5cmMifQ.wORRPu3OalU4jRYfUBJ01A\"\n});\n\nvar Location =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Location, _Component);\n\n  function Location(props) {\n    var _this;\n\n    _classCallCheck(this, Location);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Location).call(this, props));\n    _this.state = {\n      riders: [],\n      riderMarker: false,\n      avatar: \"\",\n      lat: null,\n      lng: null,\n      firstName: \"\",\n      lastName: \"\",\n      city: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Location, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var riders;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetchRiders();\n\n              case 2:\n                riders = _context.sent;\n                this.setState({\n                  riders: riders\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Map, {\n        style: \"mapbox://styles/mapbox/streets-v8\",\n        containerStyle: {\n          height: \"100vh\",\n          width: \"100vw\"\n        },\n        center: [-105.2705456, 40.0149856],\n        zoom: [12],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.state.riders && this.state.riders.map(function (rider) {\n        return React.createElement(Popup, {\n          coordinates: [rider.lng, rider.lat],\n          key: rider.id,\n          offset: {\n            \"bottom-left\": [12, -38],\n            bottom: [0, -38],\n            \"bottom-right\": [-12, -38]\n          },\n          onClick: function onClick() {\n            _this2.setState({\n              riderMarker: true,\n              avatar: rider.avatar,\n              lng: rider.lng,\n              lat: rider.lat,\n              firstName: rider.first_name,\n              lastName: rider.last_name,\n              city: rider.city\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            fontSize: \"20px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, rider.first_name), React.createElement(\"img\", {\n          src: rider.avatar,\n          style: {\n            borderRadius: \"50%\",\n            height: \"50px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }));\n      }), this.state.riderMarker && React.createElement(Marker, {\n        coordinates: [this.state.lng, this.state.lat],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Card.Img, {\n        src: this.state.avatar,\n        style: {\n          width: '200px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.state.firstName, \" \", this.state.lastName), React.createElement(\"p\", {\n        style: {\n          fontSize: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.state.city))), React.createElement(Card.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"info\",\n        size: \"sm\",\n        onClick: function onClick() {\n          return _this2.setState({\n            riderMarker: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"close\")))));\n    }\n  }]);\n\n  return Location;\n}(Component);\n\nexport default Location;","map":{"version":3,"sources":["/Users/adotmob/Desktop/bikerace/src/Location/Location.js"],"names":["React","Component","ReactMapboxGl","Popup","Marker","fetchRiders","Card","Button","Map","accessToken","Location","props","state","riders","riderMarker","avatar","lat","lng","firstName","lastName","city","setState","height","width","map","rider","id","bottom","first_name","last_name","fontSize","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactMapboxGl, { Popup, Marker } from \"react-mapbox-gl\";\nimport { fetchRiders } from \"../api/backendApi\";\nimport { Card, Button } from \"react-bootstrap\";\nimport \"./Location.scss\";\n\n// ES5\n\nconst Map = ReactMapboxGl({\n  accessToken:\n    \"pk.eyJ1IjoibGFyb3VxIiwiYSI6ImNqdWkydHVlNDBkajE0Mm43amViYTc5cmMifQ.wORRPu3OalU4jRYfUBJ01A\"\n});\n\nclass Location extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      riders: [],\n      riderMarker: false,\n      avatar: \"\",\n      lat: null,\n      lng: null,\n      firstName: \"\",\n      lastName: \"\",\n      city: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    const riders = await fetchRiders();\n    this.setState({ riders });\n  }\n  render() {\n    return (\n      <Map\n        style={\"mapbox://styles/mapbox/streets-v8\"}\n        containerStyle={{\n          height: \"100vh\",\n          width: \"100vw\"\n        }}\n        center={[-105.2705456, 40.0149856]}\n        zoom={[12]}\n      >\n        {this.state.riders &&\n          this.state.riders.map(rider => {\n            return (\n              <Popup\n                coordinates={[rider.lng, rider.lat]}\n                key={rider.id}\n                offset={{\n                  \"bottom-left\": [12, -38],\n                  bottom: [0, -38],\n                  \"bottom-right\": [-12, -38]\n                }}\n                onClick={() => {\n                  this.setState({\n                    riderMarker: true,\n                    avatar: rider.avatar,\n                    lng: rider.lng,\n                    lat: rider.lat,\n                    firstName: rider.first_name,\n                    lastName: rider.last_name,\n                    city: rider.city\n                  });\n                }}\n              >\n                <p style={{ fontSize: \"20px\" }}>{rider.first_name}</p>\n                <img\n                  src={rider.avatar}\n                  style={{ borderRadius: \"50%\", height: \"50px\" }}\n                />\n              </Popup>\n            );\n          })}\n        {this.state.riderMarker && (\n          <Marker coordinates={[this.state.lng, this.state.lat]}>\n            <Card>\n              <Card.Img src={this.state.avatar} style={{width: '200px'}} />\n              <Card.Body>\n                <Card.Title>\n                  <p>{this.state.firstName} {this.state.lastName}</p>\n                  <p style={{ fontSize: \"10px\" }}>{this.state.city}</p>\n                </Card.Title>\n              </Card.Body>\n              <Card.Footer>\n                <Button\n                  variant={\"info\"}\n                  size={\"sm\"}\n                  onClick={() => this.setState({ riderMarker: false })}\n                >\n                  close\n                </Button>\n              </Card.Footer>\n            </Card>\n          </Marker>\n        )}\n      </Map>\n    );\n  }\n}\n\nexport default Location;\n"]},"metadata":{},"sourceType":"module"}