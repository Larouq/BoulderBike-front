{"ast":null,"code":"import _regeneratorRuntime from \"/Users/adotmob/Desktop/bikerace/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/adotmob/Desktop/bikerace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nvar BACKEND_API_URL = \"http://localhost:3000\";\nexport var startHerokuVM = function startHerokuVM() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get();\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport function fetchRiders() {\n  return _fetchRiders.apply(this, arguments);\n}\n\nfunction _fetchRiders() {\n  _fetchRiders = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3() {\n    var results;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return axios.get(\"\".concat(BACKEND_API_URL, \"/riders\"));\n\n          case 3:\n            results = _context3.sent;\n            return _context3.abrupt(\"return\", results.data);\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            new Error(\"backend API request failed.\");\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 7]]);\n  }));\n  return _fetchRiders.apply(this, arguments);\n}\n\n;\nexport var submitSponsorship = function submitSponsorship(form) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var params, res, response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dispatch({\n                  type: PENDING_SPONSORSHIP\n                });\n                _context2.prev = 1;\n                params = {\n                  first_name: form.firstName,\n                  last_name: form.lastName,\n                  email: form.email,\n                  slogan: form.slogan\n                };\n                _context2.next = 5;\n                return axios.post(\"\".concat(API_URL, \"/submissions\"), params);\n\n              case 5:\n                res = _context2.sent;\n\n                if (res.status === 200) {\n                  dispatch({\n                    type: SUCCESS_SPONSORSHIP\n                  });\n                }\n\n                _context2.next = 13;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](1);\n                response = _context2.t0.response;\n                dispatch({\n                  type: ERROR_SPONSORSHIP\n                });\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 9]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport default {\n  fetchRiders: fetchRiders,\n  startHerokuVM: startHerokuVM\n};","map":{"version":3,"sources":["/Users/adotmob/Desktop/bikerace/src/api/backendApi.js"],"names":["axios","BACKEND_API_URL","startHerokuVM","dispatch","get","fetchRiders","results","data","Error","submitSponsorship","form","type","PENDING_SPONSORSHIP","params","first_name","firstName","last_name","lastName","email","slogan","post","API_URL","res","status","SUCCESS_SPONSORSHIP","response","ERROR_SPONSORSHIP"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,eAAe,GAAG,uBAAxB;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAC3BH,KAAK,CAACI,GAAN,EAD2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AAIP,gBAAsBC,WAAtB;AAAA;AAAA;;;;;2BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEmBL,KAAK,CAACI,GAAN,WAAaH,eAAb,aAFnB;;AAAA;AAEGK,YAAAA,OAFH;AAAA,8CAGIA,OAAO,CAACC,IAHZ;;AAAA;AAAA;AAAA;AAOH,gBAAIC,KAAJ,CAAU,6BAAV;;AAPG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AASN;AAED,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,kBAAMP,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACvCA,gBAAAA,QAAQ,CAAC;AAAEQ,kBAAAA,IAAI,EAAEC;AAAR,iBAAD,CAAR;AADuC;AAI/BC,gBAAAA,MAJ+B,GAItB;AACbC,kBAAAA,UAAU,EAAEJ,IAAI,CAACK,SADJ;AAEbC,kBAAAA,SAAS,EAAEN,IAAI,CAACO,QAFH;AAGbC,kBAAAA,KAAK,EAAER,IAAI,CAACQ,KAHC;AAIbC,kBAAAA,MAAM,EAAET,IAAI,CAACS;AAJA,iBAJsB;AAAA;AAAA,uBAUnBnB,KAAK,CAACoB,IAAN,WAAcC,OAAd,mBAAqCR,MAArC,CAVmB;;AAAA;AAU/BS,gBAAAA,GAV+B;;AAWrC,oBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBpB,kBAAAA,QAAQ,CAAC;AAAEQ,oBAAAA,IAAI,EAAEa;AAAR,mBAAD,CAAR;AACD;;AAboC;AAAA;;AAAA;AAAA;AAAA;AAc5BC,gBAAAA,QAd4B,gBAc5BA,QAd4B;AAerCtB,gBAAAA,QAAQ,CAAC;AAAEQ,kBAAAA,IAAI,EAAEe;AAAR,iBAAD,CAAR;;AAfqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;AAmBP,eAAe;AACbrB,EAAAA,WAAW,EAAXA,WADa;AACAH,EAAAA,aAAa,EAAbA;AADA,CAAf","sourcesContent":["import axios from \"axios\";\n\nconst BACKEND_API_URL = \"http://localhost:3000\";\n\nexport const startHerokuVM = () => async dispatch => {\n  await axios.get();\n};\n\nexport async function fetchRiders() {\n  try {\n    const results = await axios.get(`${BACKEND_API_URL}/riders`)\n    return results.data\n  }\n\n  catch (error) {\n    new Error(\"backend API request failed.\")\n  }\n};\n\nexport const submitSponsorship = form => async dispatch => {\n  dispatch({ type: PENDING_SPONSORSHIP });\n\n  try {\n    const params = {\n      first_name: form.firstName,\n      last_name: form.lastName,\n      email: form.email,\n      slogan: form.slogan\n    };\n    const res = await axios.post(`${API_URL}/submissions`, params);\n    if (res.status === 200) {\n      dispatch({ type: SUCCESS_SPONSORSHIP });\n    }\n  } catch ({ response }) {\n    dispatch({ type: ERROR_SPONSORSHIP });\n  }\n};\n\nexport default {\n  fetchRiders, startHerokuVM\n};\n"]},"metadata":{},"sourceType":"module"}