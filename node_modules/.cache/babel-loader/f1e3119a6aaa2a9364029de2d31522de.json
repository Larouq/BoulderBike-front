{"ast":null,"code":"import _regeneratorRuntime from \"/Users/adotmob/Desktop/bikerace/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/adotmob/Desktop/bikerace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { FETCH_PHOTOS, ERROR_PHOTOS, FLUSH_PHOTOS } from './types';\nexport var fetchPhotos = function fetchPhotos(page) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var FLICKR_API_URL, FLICKR_PARAMS, res, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                FLICKR_API_URL = \"https://api.flickr.com/services/rest/\";\n                FLICKR_PARAMS = {\n                  api_key: 'c67b2521c98109ab0dc2be26f1f202b8',\n                  method: \"flickr.photos.search\",\n                  tags: \"bikerace,BoulderBikeTour\",\n                  media: \"photo\",\n                  per_page: 30,\n                  format: \"json\",\n                  nojsoncallback: 1,\n                  extras: \"date_upload, icon_server, owner_name, views\",\n                  page: page\n                };\n                page === 1 && dispatch({\n                  type: FLUSH_PHOTOS\n                }); // if we want the first page, reset the state first (issue without this fix)\n\n                _context.prev = 3;\n                _context.next = 6;\n                return axios.get(\"\".concat(FLICKR_API_URL), {\n                  params: FLICKR_PARAMS\n                });\n\n              case 6:\n                res = _context.sent;\n                dispatch({\n                  type: FETCH_PHOTOS,\n                  photos: res.data.photos.photo,\n                  page: res.data.photos.page\n                });\n                _context.next = 14;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](3);\n                response = _context.t0.response;\n                dispatch({\n                  type: ERROR_PHOTOS\n                });\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 10]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/adotmob/Desktop/bikerace/src/api/index.js"],"names":["axios","FETCH_PHOTOS","ERROR_PHOTOS","FLUSH_PHOTOS","fetchPhotos","page","dispatch","FLICKR_API_URL","FLICKR_PARAMS","api_key","method","tags","media","per_page","format","nojsoncallback","extras","type","get","params","res","photos","data","photo","response"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACIC,YADJ,EAEIC,YAFJ,EAGIC,YAHJ,QAIS,SAJT;AAMA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3BC,gBAAAA,cAD2B,GACV,uCADU;AAE3BC,gBAAAA,aAF2B,GAEX;AACpBC,kBAAAA,OAAO,EAAE,kCADW;AAEpBC,kBAAAA,MAAM,EAAE,sBAFY;AAGpBC,kBAAAA,IAAI,EAAE,0BAHc;AAIpBC,kBAAAA,KAAK,EAAE,OAJa;AAKpBC,kBAAAA,QAAQ,EAAE,EALU;AAMpBC,kBAAAA,MAAM,EAAE,MANY;AAOpBC,kBAAAA,cAAc,EAAE,CAPI;AAQpBC,kBAAAA,MAAM,EAAE,6CARY;AASpBX,kBAAAA,IAAI,EAAJA;AAToB,iBAFW;AAajCA,gBAAAA,IAAI,KAAK,CAAT,IAAcC,QAAQ,CAAC;AAAEW,kBAAAA,IAAI,EAAEd;AAAR,iBAAD,CAAtB,CAbiC,CAae;;AAbf;AAAA;AAAA,uBAebH,KAAK,CAACkB,GAAN,WAAaX,cAAb,GAA+B;AAAEY,kBAAAA,MAAM,EAAEX;AAAV,iBAA/B,CAfa;;AAAA;AAezBY,gBAAAA,GAfyB;AAgB/Bd,gBAAAA,QAAQ,CAAC;AACPW,kBAAAA,IAAI,EAAEhB,YADC;AAEPoB,kBAAAA,MAAM,EAAED,GAAG,CAACE,IAAJ,CAASD,MAAT,CAAgBE,KAFjB;AAGPlB,kBAAAA,IAAI,EAAEe,GAAG,CAACE,IAAJ,CAASD,MAAT,CAAgBhB;AAHf,iBAAD,CAAR;AAhB+B;AAAA;;AAAA;AAAA;AAAA;AAqBtBmB,gBAAAA,QArBsB,eAqBtBA,QArBsB;AAsB/BlB,gBAAAA,QAAQ,CAAC;AAAEW,kBAAAA,IAAI,EAAEf;AAAR,iBAAD,CAAR;;AAtB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB","sourcesContent":["import axios from \"axios\";\n\nimport {\n    FETCH_PHOTOS,\n    ERROR_PHOTOS,\n    FLUSH_PHOTOS,\n  } from './types';\n\nexport const fetchPhotos = page => async dispatch => {\n  const FLICKR_API_URL = \"https://api.flickr.com/services/rest/\";\n  const FLICKR_PARAMS = {\n    api_key: 'c67b2521c98109ab0dc2be26f1f202b8',\n    method: \"flickr.photos.search\",\n    tags: \"bikerace,BoulderBikeTour\",\n    media: \"photo\",\n    per_page: 30,\n    format: \"json\",\n    nojsoncallback: 1,\n    extras: \"date_upload, icon_server, owner_name, views\",\n    page\n  };\n  page === 1 && dispatch({ type: FLUSH_PHOTOS }); // if we want the first page, reset the state first (issue without this fix)\n  try {\n    const res = await axios.get(`${FLICKR_API_URL}`, { params: FLICKR_PARAMS });\n    dispatch({\n      type: FETCH_PHOTOS,\n      photos: res.data.photos.photo,\n      page: res.data.photos.page\n    });\n  } catch ({ response }) {\n    dispatch({ type: ERROR_PHOTOS });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}