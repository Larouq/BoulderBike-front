{"ast":null,"code":"import _classCallCheck from \"/Users/adotmob/Desktop/bikerace/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/adotmob/Desktop/bikerace/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/adotmob/Desktop/bikerace/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/adotmob/Desktop/bikerace/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/adotmob/Desktop/bikerace/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/adotmob/Desktop/bikerace/src/Photos/Photos.js\";\nimport React, { Component } from \"react\";\nimport PhotoItem from './Photos';\nimport { fetchPhotos } from '../api/api.js';\n\nvar Photos =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Photos, _Component);\n\n  function Photos() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Photos);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Photos)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      photos: [],\n      searchQuery: \"\",\n      isLoadingPhotos: true\n    };\n\n    _this.searchPhotos = function () {\n      var tags = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\n      _this.setState({\n        isLoadingPhotos: true\n      }, function () {\n        try {\n          // Tags are in fact entered with spaces in between in the Flickr UI, so let's allow for that here too.\n          var tagsParam = tags.replace(\" \", \",\");\n          fetchPhotos(tagsParam).then(function (photos) {\n            _this.setState({\n              photos: photos,\n              isLoadingPhotos: false\n            });\n          });\n        } catch (e) {\n          _this.setState({\n            isLoadingPhotos: false\n          });\n\n          alert(\"Could not retrieve photos. Please check your credentials.\");\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Photos, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.searchPhotos();\n    }\n  }, {\n    key: \"renderPhotos\",\n    value: function renderPhotos() {\n      return this.state.photos.map(function (photo, i) {\n        return React.createElement(\"div\", {\n          key: \"photo_\".concat(i),\n          className: \"column is-one-quarter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(PhotoItem, {\n          photo: photo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Photos;\n}(Component);\n\nexport default Photos;","map":{"version":3,"sources":["/Users/adotmob/Desktop/bikerace/src/Photos/Photos.js"],"names":["React","Component","PhotoItem","fetchPhotos","Photos","state","photos","searchQuery","isLoadingPhotos","searchPhotos","tags","setState","tagsParam","replace","then","e","alert","map","photo","i"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,WAAT,QAA4B,eAA5B;;IAEMC,M;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,WAAW,EAAE,EAFP;AAINC,MAAAA,eAAe,EAAE;AAJX,K;;UAWRC,Y,GAAe,YAAe;AAAA,UAAdC,IAAc,uEAAP,EAAO;;AAC5B,YAAKC,QAAL,CACE;AACEH,QAAAA,eAAe,EAAE;AADnB,OADF,EAIE,YAAM;AACJ,YAAI;AACF;AACA,cAAMI,SAAS,GAAGF,IAAI,CAACG,OAAL,CAAa,GAAb,EAAkB,GAAlB,CAAlB;AAEAV,UAAAA,WAAW,CAACS,SAAD,CAAX,CAAuBE,IAAvB,CAA4B,UAAAR,MAAM,EAAI;AACpC,kBAAKK,QAAL,CAAc;AACZL,cAAAA,MAAM,EAANA,MADY;AAEZE,cAAAA,eAAe,EAAE;AAFL,aAAd;AAID,WALD;AAMD,SAVD,CAUE,OAAOO,CAAP,EAAU;AACV,gBAAKJ,QAAL,CAAc;AACZH,YAAAA,eAAe,EAAE;AADL,WAAd;;AAGAQ,UAAAA,KAAK,CAAC,2DAAD,CAAL;AACD;AACF,OArBH;AAuBD,K;;;;;;;wCA5BmB;AAClB,WAAKP,YAAL;AACD;;;mCA4Bc;AACb,aAAO,KAAKJ,KAAL,CAAWC,MAAX,CAAkBW,GAAlB,CAAsB,UAACC,KAAD,EAAQC,CAAR,EAAc;AACzC,eACE;AAAK,UAAA,GAAG,kBAAWA,CAAX,CAAR;AAAwB,UAAA,SAAS,EAAC,uBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAED,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD,OANM,CAAP;AAOD;;;6BACQ;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAjDkBjB,S;;AAoDrB,eAAeG,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PhotoItem from './Photos';\nimport { fetchPhotos } from '../api/api.js';\n\nclass Photos extends Component {\n  state = {\n    photos: [],\n    searchQuery: \"\",\n\n    isLoadingPhotos: true\n  };\n\n  componentDidMount() {\n    this.searchPhotos();\n  }\n\n  searchPhotos = (tags = \"\") => {\n    this.setState(\n      {\n        isLoadingPhotos: true\n      },\n      () => {\n        try {\n          // Tags are in fact entered with spaces in between in the Flickr UI, so let's allow for that here too.\n          const tagsParam = tags.replace(\" \", \",\");\n\n          fetchPhotos(tagsParam).then(photos => {\n            this.setState({\n              photos,\n              isLoadingPhotos: false\n            });\n          });\n        } catch (e) {\n          this.setState({\n            isLoadingPhotos: false\n          });\n          alert(\"Could not retrieve photos. Please check your credentials.\");\n        }\n      }\n    );\n  };\n\n  renderPhotos() {\n    return this.state.photos.map((photo, i) => {\n      return (\n        <div key={`photo_${i}`} className=\"column is-one-quarter\">\n          <PhotoItem photo={photo} />\n        </div>\n      );\n    });\n  }\n  render() {\n    return <div />;\n  }\n}\n\nexport default Photos;\n"]},"metadata":{},"sourceType":"module"}